translate([0, 0, 0]) cube(1);
translate([0, 0, 0]) cube(1);
translate([0, 0, 0]) cube(1);
translate([0, 1, 0]) cube(1);
translate([0, 1, 0]) cube(1);
translate([0, 1, 0]) cube(1);
translate([0, 2, 0]) cube(1);
translate([0, 2, 0]) cube(1);
translate([0, 2, 0]) cube(1);
translate([1, 0, 0]) cube(1);
translate([1, 0, 0]) cube(1);
translate([1, 0, 0]) cube(1);
translate([1, 1, 0]) cube(1);
translate([1, 1, 0]) cube(1);
translate([1, 1, 0]) cube(1);
translate([1, 2, 0]) cube(1);
translate([1, 2, 0]) cube(1);
translate([1, 2, 0]) cube(1);
translate([2, 0, 0]) cube(1);
translate([2, 0, 0]) cube(1);
translate([2, 0, 0]) cube(1);
translate([2, 1, 0]) cube(1);
translate([2, 1, 0]) cube(1);
translate([2, 1, 0]) cube(1);
translate([2, 2, 0]) cube(1);
translate([2, 2, 0]) cube(1);
translate([2, 2, 0]) cube(1);
translate([0, 0, 1]) cube(1);
translate([0, 0, 1]) cube(1);
translate([0, 0, 1]) cube(1);
translate([0, 1, 1]) cube(1);
translate([0, 1, 1]) cube(1);
translate([0, 1, 1]) cube(1);
translate([0, 2, 1]) cube(1);
translate([0, 2, 1]) cube(1);
translate([0, 2, 1]) cube(1);
translate([1, 2, 1]) cube(1);
translate([1, 2, 1]) cube(1);
translate([1, 2, 1]) cube(1);
translate([2, 0, 1]) cube(1);
translate([2, 0, 1]) cube(1);
translate([2, 0, 1]) cube(1);
translate([2, 2, 1]) cube(1);
translate([2, 2, 1]) cube(1);
translate([2, 2, 1]) cube(1);
translate([2, 1, 1]) cube(1);
translate([2, 1, 1]) cube(1);
translate([2, 1, 1]) cube(1);
translate([1, 0, 1]) cube(1);
translate([1, 0, 1]) cube(1);
translate([1, 0, 1]) cube(1);
translate([0, 0, 2]) cube(1);
translate([0, 0, 2]) cube(1);
translate([0, 0, 2]) cube(1);
translate([0, 1, 2]) cube(1);
translate([0, 1, 2]) cube(1);
translate([0, 1, 2]) cube(1);
translate([0, 2, 2]) cube(1);
translate([0, 2, 2]) cube(1);
translate([0, 2, 2]) cube(1);
translate([1, 0, 2]) cube(1);
translate([1, 0, 2]) cube(1);
translate([1, 0, 2]) cube(1);
translate([1, 1, 2]) cube(1);
translate([1, 1, 2]) cube(1);
translate([1, 1, 2]) cube(1);
translate([1, 2, 2]) cube(1);
translate([1, 2, 2]) cube(1);
translate([1, 2, 2]) cube(1);
translate([2, 0, 2]) cube(1);
translate([2, 0, 2]) cube(1);
translate([2, 0, 2]) cube(1);
translate([2, 1, 2]) cube(1);
translate([2, 1, 2]) cube(1);
translate([2, 1, 2]) cube(1);
translate([2, 2, 2]) cube(1);
translate([2, 2, 2]) cube(1);
translate([2, 2, 2]) cube(1);
